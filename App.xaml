<Application x:Class="UIKitTutorials.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UIKitTutorials"
             >
             
    
    
    <Application.Resources>

        

        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/LightTheme.xaml"/>
                
                <ResourceDictionary Source="Assets/Icons/Icons.xaml"/>

                <ResourceDictionary Source="Styles/MainStyle.xaml"/>

                
                
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Window">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>

            <Style x:Key="TitleText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="36" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Style>


            <Style x:Key="NormalText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="LineHeight" Value="28" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Style>


            <Style x:Key="button" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Width" Value="170" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#FDFEFE" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="White" Padding="15" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#e8e8e8" />
                        <Setter Property="Foreground" Value="DimGray" />
                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="#d9d9d9" />
                        <Setter Property="Foreground" Value="DimGray" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="buttonCircle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="8 0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="#878787" Padding="15" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#d9d9d9" />
                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="#c4c4c4" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
          


            <Style x:Key="imgClose" TargetType="Image">
                <Setter Property="Width" Value="30" />
                <Setter Property="Height" Value="30" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="0 13 13 0" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="textHint" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Margin" Value="10 0 0 0" />
                <Setter Property="Foreground" Value="#ACB0AF" />
            </Style>


            <Style x:Key="textBox" TargetType="Control">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Margin" Value="10 0 0 0" />
                <Setter Property="Foreground" Value="#878787" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <!-- 隐藏导航栏的样式 -->
            <Style x:Key="HiddenNavigationStyle" TargetType="NavigationWindow">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="NavigationWindow">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="mainButton" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="0 20 0 0" />
                <Setter Property="Width" Value="200" />
                <Setter Property="Background" Value="#FF4285F4" />
                <Setter Property="Foreground" Value="#FDFEFE" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="#FF4285F4" Padding="15" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3F7FDB" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="#2C5FB3" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>

            </Style>

            <!-- 其他资源 -->

            <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="10">
                                <!-- 设置圆角半径 -->
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TabItem 样式 -->
            <Style TargetType="TabItem" x:Key="TabItemStyle">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#666666"/>
                <Setter Property="Height" Value="30"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="#6633CC"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ProgressBar 样式 -->
            <Style TargetType="ProgressBar" x:Key="ProgressBarStyle">
                <Setter Property="Foreground" Value="#8AC9DF"/>
                <Setter Property="Background" Value="#E8F3F6"/>
            </Style>

            <!-- 文本框 样式 -->
            <Style TargetType="TextBox" x:Key="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 现代按钮样式 -->
            <Style x:Key="ModernButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#FF4285F4"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3F7FDB"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#2C5FB3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="BorderlessToggleButton" TargetType="ToggleButton">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
                <Style TargetType="Button" x:Key="ModernButton">
                <Setter Property="Width" Value="100"/>
                <Setter Property="Background" Value="#FF4285F4"/>
                <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#CCCCCC"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Padding" Value="10,5"/>
                    <Setter Property="Margin" Value="0,0,10,0"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" 
                            CornerRadius="6"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- 鼠标悬停效果 -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#777777"/>
                                </Trigger>
                                    <!-- 按下效果 -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="border" Property="BorderBrush" Value="#777777"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- 特殊按钮样式 - 确定按钮 -->
                <Style TargetType="Button" x:Key="PrimaryButton" BasedOn="{StaticResource ModernButton}">
                    <Setter Property="Background" Value="#4CAF50"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#45A049"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#43A047"/>
                            <Setter Property="BorderBrush" Value="#3D8B40"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#3D8B40"/>
                            <Setter Property="BorderBrush" Value="#367B39"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <!-- 特殊按钮样式 - 取消按钮 -->
                <Style TargetType="Button" x:Key="DangerButton" BasedOn="{StaticResource ModernButton}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Background" Value="#F44336"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#D32F2F"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E53935"/>
                            <Setter Property="BorderBrush" Value="#C62828"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D32F2F"/>
                            <Setter Property="BorderBrush" Value="#B71C1C"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            <!--下拉框样式-->
            <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <!-- 主边框 -->
                                <Border x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"/>

                                <!-- 内容区域 -->
                                <Grid Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- 显示选中项 -->
                                    <ContentPresenter x:Name="ContentSite"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="Border">
                                                <Setter Property="CornerRadius" Value="5"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>

                                    <!-- 下拉按钮（带箭头图标） -->
                                    <ToggleButton x:Name="ToggleButton"
                            Grid.Column="1"
                            Focusable="false"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Background="Transparent">
                                                    <Path x:Name="Arrow"
                                            Fill="#333333"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M0,0 L4,4 8,0 Z"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Arrow" Property="Fill" Value="#2080f0"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>

                                <!-- 下拉弹出框 -->
                                <Popup x:Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="True"
                        StaysOpen="False"
                        PopupAnimation="Slide">
                                    <Border x:Name="DropDownBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Margin="0,5,0,0">
                                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter TargetName="MainBorder" Property="BorderBrush" Value="#555555"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="MainBorder" Property="BorderBrush" Value="#333333"/>
                                    
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- 其余样式代码不变 -->
            </Style>


        </ResourceDictionary>

        
            


    </Application.Resources>
</Application>
